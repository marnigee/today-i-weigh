{"ast":null,"code":"var _jsxFileName = \"/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//\n// import fetch from 'isomorphic-unfetch';\n//\n// const Index = props => (\n//   // <Layout>\n//   // <h1>Batman TV Shows: </h1>\n//\n//   <ul>\n//     {props.shows.map(show => (\n//       <li key={show.id}>\n//         {show.name}\n//       </li>\n//     ))}\n//   </ul>\n// );\n//\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n//\n// export default Index;\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('/api/randomQuote', fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-1236022937\" + \" \" + \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1236022937\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-1236022937\" + \" \" + \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"1236022937\",\n    __self: this\n  }, \"main.jsx-1236022937{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-1236022937{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-1236022937{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJuaWdvbHRzbWFuL0RvY3VtZW50cy9jb2RlL3RvZGF5LWktd2VpZ2gvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbURrQixBQUdxQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXRCLFVBWEEsT0FNQSIsImZpbGUiOiIvVXNlcnMvbWFybmlnb2x0c21hbi9Eb2N1bWVudHMvY29kZS90b2RheS1pLXdlaWdoL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9cbi8vIGltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuLy9cbi8vIGNvbnN0IEluZGV4ID0gcHJvcHMgPT4gKFxuLy8gICAvLyA8TGF5b3V0PlxuLy8gICAvLyA8aDE+QmF0bWFuIFRWIFNob3dzOiA8L2gxPlxuLy9cbi8vICAgPHVsPlxuLy8gICAgIHtwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoXG4vLyAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbi8vICAgICAgICAge3Nob3cubmFtZX1cbi8vICAgICAgIDwvbGk+XG4vLyAgICAgKSl9XG4vLyAgIDwvdWw+XG4vLyApO1xuLy9cbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbi8vICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4vLyAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuLy9cbi8vICAgY29uc29sZS5sb2coYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTtcbi8vXG4vLyAgIHJldHVybiB7XG4vLyAgICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4vLyAgIH07XG4vLyB9O1xuLy9cbi8vIGV4cG9ydCBkZWZhdWx0IEluZGV4O1xuXG5cbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcblxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcbiAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUignL2FwaS9yYW5kb21RdW90ZScsIGZldGNoZXIpO1xuICAvLyBUaGUgZm9sbG93aW5nIGxpbmUgaGFzIG9wdGlvbmFsIGNoYWluaW5nLCBhZGRlZCBpbiBOZXh0LmpzIHY5LjEuNSxcbiAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXG4gIGNvbnN0IGF1dGhvciA9IGRhdGE/LmF1dGhvcjtcbiAgbGV0IHF1b3RlID0gZGF0YT8ucXVvdGU7XG5cbiAgaWYgKCFkYXRhKSBxdW90ZSA9ICdMb2FkaW5nLi4uJztcbiAgaWYgKGVycm9yKSBxdW90ZSA9ICdGYWlsZWQgdG8gZmV0Y2ggdGhlIHF1b3RlLic7XG5cbiAgcmV0dXJuIChcbiAgICA8bWFpbiBjbGFzc05hbWU9XCJjZW50ZXJcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVcIj57cXVvdGV9PC9kaXY+XG4gICAgICB7YXV0aG9yICYmIDxzcGFuIGNsYXNzTmFtZT1cImF1dGhvclwiPi0ge2F1dGhvcn08L3NwYW4+fVxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIG1haW4ge1xuICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgbWF4LXdpZHRoOiA5MDBweDtcbiAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIC5xdW90ZSB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IGN1cnNpdmU7XG4gICAgICAgICAgY29sb3I6ICNlMjQzZGU7XG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgIC5hdXRob3Ige1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAgICAgICAgIGNvbG9yOiAjNTU5ODM0O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvbWFpbj5cbiAgKTtcbn1cblxuXG4vLyBpbXBvcnQgdXNlU1dSIGZyb20gJ3N3cic7XG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcbi8vXG4vLyBmdW5jdGlvbiBmZXRjaGVyICh1cmwpIHtcbi8vICAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcbi8vIH1cbi8vXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCAoKSB7XG4vLyAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUignL2FwaS9yYW5kb21RdW90ZScsIGZldGNoZXIpO1xuLy8gICAvLyBUaGUgZm9sbG93aW5nIGxpbmUgaGFzIG9wdGlvbmFsIGNoYWluaW5nLCBhZGRlZCBpbiBOZXh0LmpzIHY5LjEuNSxcbi8vICAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXG4vLyAgIC8vIGNvbnN0IGF1dGhvciA9IGRhdGEuYXV0aG9yO1xuLy8gICAvLyBsZXQgcXVvdGUgPSBkYXRhLnF1b3RlO1xuLy8gICBkZWJ1Z2dlcjtcbi8vICAgbGV0IHF1b3RlO1xuLy9cbi8vICAgaWYgKCFkYXRhKSBxdW90ZSA9ICdMb2FkaW5nLi4uJztcbi8vICAgaWYgKGVycm9yKSBxdW90ZSA9ICdGYWlsZWQgdG8gZmV0Y2ggdGhlIHF1b3RlLic7XG4vL1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxtYWluIGNsYXNzTmFtZT0nY2VudGVyJz5cbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPSdxdW90ZSc+e3F1b3RlfTwvZGl2PlxuLy9cbi8vICAgICAgIDxzdHlsZSBqc3g+e2Bcbi8vICAgICAgICAgbWFpbiB7XG4vLyAgICAgICAgICAgd2lkdGg6IDkwJTtcbi8vICAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xuLy8gICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcbi8vICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgLnF1b3RlIHtcbi8vICAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcbi8vICAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcbi8vICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4vLyAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgLmF1dGhvciB7XG4vLyAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4vLyAgICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XG4vLyAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfVxuLy8gICAgICAgPC9zdHlsZT5cbi8vICAgICA8L21haW4+XG4vLyAgICk7XG4vLyB9XG4iXX0= */\\n/*@ sourceURL=/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js */\"));\n} // import useSWR from 'swr';\n// import fetch from 'isomorphic-unfetch';\n//\n// function fetcher (url) {\n//   return fetch(url).then(r => r.json());\n// }\n//\n// export default function Index () {\n//   const { data, error } = useSWR('/api/randomQuote', fetcher);\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   // const author = data.author;\n//   // let quote = data.quote;\n//   debugger;\n//   let quote;\n//\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n//\n//   return (\n//     <main className='center'>\n//       <div className='quote'>{quote}</div>\n//\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}\n//       </style>\n//     </main>\n//   );\n// }","map":{"version":3,"sources":["/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js"],"names":["useSWR","fetcher","url","fetch","then","r","json","Index","data","error","author","quote"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CAA9B,CAD8B,CAE9B;AACA;;AACA,QAAMS,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,4BAAR;AAEX,SACE;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb;AAAA;AAAA;AAAA,wqJADF;AA0BD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//\n// import fetch from 'isomorphic-unfetch';\n//\n// const Index = props => (\n//   // <Layout>\n//   // <h1>Batman TV Shows: </h1>\n//\n//   <ul>\n//     {props.shows.map(show => (\n//       <li key={show.id}>\n//         {show.name}\n//       </li>\n//     ))}\n//   </ul>\n// );\n//\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n//\n// export default Index;\n\n\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { data, error } = useSWR('/api/randomQuote', fetcher);\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  const author = data?.author;\n  let quote = data?.quote;\n\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n\n  return (\n    <main className=\"center\">\n      <div className=\"quote\">{quote}</div>\n      {author && <span className=\"author\">- {author}</span>}\n\n      <style jsx>{`\n        main {\n          width: 90%;\n          max-width: 900px;\n          margin: 300px auto;\n          text-align: center;\n        }\n        .quote {\n          font-family: cursive;\n          color: #e243de;\n          font-size: 24px;\n          padding-bottom: 10px;\n        }\n        .author {\n          font-family: sans-serif;\n          color: #559834;\n          font-size: 20px;\n        }\n      `}</style>\n    </main>\n  );\n}\n\n\n// import useSWR from 'swr';\n// import fetch from 'isomorphic-unfetch';\n//\n// function fetcher (url) {\n//   return fetch(url).then(r => r.json());\n// }\n//\n// export default function Index () {\n//   const { data, error } = useSWR('/api/randomQuote', fetcher);\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   // const author = data.author;\n//   // let quote = data.quote;\n//   debugger;\n//   let quote;\n//\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n//\n//   return (\n//     <main className='center'>\n//       <div className='quote'>{quote}</div>\n//\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}\n//       </style>\n//     </main>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}