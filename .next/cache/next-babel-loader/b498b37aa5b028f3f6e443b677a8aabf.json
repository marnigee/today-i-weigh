{"ast":null,"code":"var _jsxFileName = \"/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// export default function Index () {\n//   return (\n//     <main className='center'>\n//       <div className='quote'>Write tests, not too many, mostly integration</div>\n//       <span className='author'> - Guillermo Rauch </span>\n//\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}\n//       </style>\n//     </main>\n//   );\n// }\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('/api/randomQuote', fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  let quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-3670605164\" + \" \" + \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3670605164\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, quote), data && __jsx(\"span\", {\n    className: \"jsx-3670605164\" + \" \" + \"data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"- \", data), __jsx(_JSXStyle, {\n    id: \"3670605164\",\n    __self: this\n  }, \"main.jsx-3670605164{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-3670605164{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.data.jsx-3670605164{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJuaWdvbHRzbWFuL0RvY3VtZW50cy9jb2RlL3RvZGF5LWktd2VpZ2gvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaURrQixBQUdxQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXRCLFVBWEEsT0FNQSIsImZpbGUiOiIvVXNlcnMvbWFybmlnb2x0c21hbi9Eb2N1bWVudHMvY29kZS90b2RheS1pLXdlaWdoL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXggKCkge1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxtYWluIGNsYXNzTmFtZT0nY2VudGVyJz5cbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPSdxdW90ZSc+V3JpdGUgdGVzdHMsIG5vdCB0b28gbWFueSwgbW9zdGx5IGludGVncmF0aW9uPC9kaXY+XG4vLyAgICAgICA8c3BhbiBjbGFzc05hbWU9J2F1dGhvcic+IC0gR3VpbGxlcm1vIFJhdWNoIDwvc3Bhbj5cbi8vXG4vLyAgICAgICA8c3R5bGUganN4PntgXG4vLyAgICAgICAgIG1haW4ge1xuLy8gICAgICAgICAgIHdpZHRoOiA5MCU7XG4vLyAgICAgICAgICAgbWF4LXdpZHRoOiA5MDBweDtcbi8vICAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XG4vLyAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuLy8gICAgICAgICB9XG4vLyAgICAgICAgIC5xdW90ZSB7XG4vLyAgICAgICAgICAgZm9udC1mYW1pbHk6IGN1cnNpdmU7XG4vLyAgICAgICAgICAgY29sb3I6ICNlMjQzZGU7XG4vLyAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuLy8gICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuLy8gICAgICAgICB9XG4vLyAgICAgICAgIC5hdXRob3Ige1xuLy8gICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuLy8gICAgICAgICAgIGNvbG9yOiAjNTU5ODM0O1xuLy8gICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbi8vICAgICAgICAgfVxuLy8gICAgICAgYH1cbi8vICAgICAgIDwvc3R5bGU+XG4vLyAgICAgPC9tYWluPlxuLy8gICApO1xuLy8gfVxuXG5pbXBvcnQgdXNlU1dSIGZyb20gJ3N3cic7XG5cbmZ1bmN0aW9uIGZldGNoZXIgKHVybCkge1xuICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHIgPT4gci5qc29uKCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCAoKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUignL2FwaS9yYW5kb21RdW90ZScsIGZldGNoZXIpO1xuICAvLyBUaGUgZm9sbG93aW5nIGxpbmUgaGFzIG9wdGlvbmFsIGNoYWluaW5nLCBhZGRlZCBpbiBOZXh0LmpzIHY5LjEuNSxcbiAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXG4gIGxldCBxdW90ZTtcblxuICBpZiAoIWRhdGEpIHF1b3RlID0gJ0xvYWRpbmcuLi4nO1xuICBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcblxuICByZXR1cm4gKFxuICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cbiAgICAgIHtkYXRhICYmIDxzcGFuIGNsYXNzTmFtZT1cImRhdGFcIj4tIHtkYXRhfTwvc3Bhbj59XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIG1haW4ge1xuICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgbWF4LXdpZHRoOiA5MDBweDtcbiAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIC5xdW90ZSB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IGN1cnNpdmU7XG4gICAgICAgICAgY29sb3I6ICNlMjQzZGU7XG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgIC5kYXRhIHtcbiAgICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgICBjb2xvcjogIzU1OTgzNDtcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L21haW4+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js"],"names":["useSWR","fetcher","url","fetch","then","r","json","Index","data","error","quote"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAkB;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CAA9B,CAD+B,CAE/B;AACA;;AACA,MAAIS,KAAJ;AAEA,MAAI,CAACF,IAAL,EAAWE,KAAK,GAAG,YAAR;AACX,MAAID,KAAJ,EAAWC,KAAK,GAAG,4BAAR;AAEX,SACE;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGF,IAAI,IAAI;AAAA,wCAAgB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BA,IAA1B,CAFX;AAAA;AAAA;AAAA,8qGADF;AAyBD","sourcesContent":["// export default function Index () {\n//   return (\n//     <main className='center'>\n//       <div className='quote'>Write tests, not too many, mostly integration</div>\n//       <span className='author'> - Guillermo Rauch </span>\n//\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}\n//       </style>\n//     </main>\n//   );\n// }\n\nimport useSWR from 'swr';\n\nfunction fetcher (url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index () {\n  const { data, error } = useSWR('/api/randomQuote', fetcher);\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n  let quote;\n\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n\n  return (\n    <main className=\"center\">\n      <div className=\"quote\">{quote}</div>\n      {data && <span className=\"data\">- {data}</span>}\n      <style jsx>{`\n        main {\n          width: 90%;\n          max-width: 900px;\n          margin: 300px auto;\n          text-align: center;\n        }\n        .quote {\n          font-family: cursive;\n          color: #e243de;\n          font-size: 24px;\n          padding-bottom: 10px;\n        }\n        .data {\n          font-family: sans-serif;\n          color: #559834;\n          font-size: 20px;\n        }\n      `}</style>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}