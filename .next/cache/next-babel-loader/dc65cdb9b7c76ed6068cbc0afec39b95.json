{"ast":null,"code":"var _jsxFileName = \"/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => // <Layout>\n__jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.shows.first()));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index; // import useSWR from 'swr';\n// import fetch from 'isomorphic-unfetch';\n//\n// function fetcher (url) {\n//   return fetch(url).then(r => r.json());\n// }\n//\n// export default function Index () {\n//   const { data, error } = useSWR('/api/randomQuote', fetcher);\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   // const author = data.author;\n//   // let quote = data.quote;\n//   debugger;\n//   let quote;\n//\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n//\n//   return (\n//     <main className='center'>\n//       <div className='quote'>{quote}</div>\n//\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}\n//       </style>\n//     </main>\n//   );\n// }","map":{"version":3,"sources":["/Users/marnigoltsman/Documents/code/today-i-weigh/pages/index.js"],"names":["fetch","Index","props","shows","first","getInitialProps","res","data","json","console","log","length","map","entry","show"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,KAAZ,EADH,CAFF,CAFF;;AAUAH,KAAK,CAACI,eAAN,GAAwB,kBAAkB;AACxC,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMO,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLR,IAAAA,KAAK,EAAEI,IAAI,CAACK,GAAL,CAASC,KAAK,IAAIA,KAAK,CAACC,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeb,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  // <Layout>\n  <div>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.first()}\n    </ul>\n  </div>\n);\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;\n\n// import useSWR from 'swr';\n// import fetch from 'isomorphic-unfetch';\n//\n// function fetcher (url) {\n//   return fetch(url).then(r => r.json());\n// }\n//\n// export default function Index () {\n//   const { data, error } = useSWR('/api/randomQuote', fetcher);\n//   // The following line has optional chaining, added in Next.js v9.1.5,\n//   // is the same as `data && data.author`\n//   // const author = data.author;\n//   // let quote = data.quote;\n//   debugger;\n//   let quote;\n//\n//   if (!data) quote = 'Loading...';\n//   if (error) quote = 'Failed to fetch the quote.';\n//\n//   return (\n//     <main className='center'>\n//       <div className='quote'>{quote}</div>\n//\n//       <style jsx>{`\n//         main {\n//           width: 90%;\n//           max-width: 900px;\n//           margin: 300px auto;\n//           text-align: center;\n//         }\n//         .quote {\n//           font-family: cursive;\n//           color: #e243de;\n//           font-size: 24px;\n//           padding-bottom: 10px;\n//         }\n//         .author {\n//           font-family: sans-serif;\n//           color: #559834;\n//           font-size: 20px;\n//         }\n//       `}\n//       </style>\n//     </main>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}